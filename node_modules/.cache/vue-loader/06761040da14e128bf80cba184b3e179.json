{"remainingRequest":"C:\\Users\\tan\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\文件存储\\渡一教育\\付费课程Level One\\VUE\\vue-demo\\DatePicker.vue?vue&type=style&index=0&id=cffaffec&scoped=true&lang=css&","dependencies":[{"path":"D:\\文件存储\\渡一教育\\付费课程Level One\\VUE\\vue-demo\\DatePicker.vue","mtime":1600347587786},{"path":"C:\\Users\\tan\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\tan\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\tan\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\tan\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\tan\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJy4vYXNzZXRzL2ZvbnQuY3NzJzsKQGltcG9ydCAnLi9hc3NldHMvZGF0ZVBpY2tlci5jc3MnOwo="},{"version":3,"sources":["DatePicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkLA;AACA","file":"DatePicker.vue","sourceRoot":".","sourcesContent":["<template>\r\n    <div class=\"date-picker\" v-click-outside>\r\n        <div class=\"picker-input\">\r\n            <span class=\"input-prefix\">\r\n                <i class=\"iconfont\">&#xe75b;</i>\r\n            </span>\r\n            <input \r\n             type=\"text\" \r\n             :value=\"chooseDate\"\r\n             @input=\"inputDate($event)\"\r\n            >\r\n        </div>\r\n        <div class=\"picker-panel\" v-if=\"showPanel\">\r\n            <div class=\"picker-arrow\" />\r\n            <div class=\"picker-body\">\r\n                <div class=\"picker-header\">\r\n                    <span class=\"picker-btn iconfont icon-prev-year\" @click=\"changeYear('prev')\">&#xe714;</span>\r\n                    <span class=\"picker-btn iconfont icon-prev-month\" @click=\"changeMonth('prev')\">&#xe712;</span>\r\n                    <span class=\"picker-date\">\r\n                        {{ showDate.year }}年{{ showDate.month + 1 }}月\r\n                    </span>\r\n                    <span class=\"picker-btn iconfont icon-next-month\" @click=\"changeMonth('next')\">&#xe718;</span>\r\n                    <span class=\"picker-btn iconfont icon-next-year\" @click=\"changeYear('next')\">&#xe713;</span>\r\n                </div>\r\n                <div class=\"picker-content\">\r\n                    <div class=\"picker-weeks\">\r\n                        <div\r\n                         v-for=\"week in ['日','一','二','三','四','五','六']\" \r\n                         :key=\"week\"\r\n                         class=\"week\"\r\n                        >{{ week }}</div>\r\n                    </div>\r\n                    <div class=\"picker-days\">\r\n                        <div\r\n                         v-for=\"(day,index) in getOneMonthDays\"\r\n                         :key=\"day + '-' + index\"\r\n                         :class=\"{'is-other':!isCur(day).isCurMonth,\r\n                                  'is-today':isCur(day).isToday,\r\n                                  'is-select':day.getMonth()===showDate.month && day.getDate()===showDate.day}\"\r\n                         @click=\"selectDay(day)\"\r\n                        >{{ day.getDate() }}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    directives:{\r\n        'click-outside':{\r\n            bind(el,binding,vnode){\r\n                document.onclick=function(e){\r\n                    const dom=e.target;\r\n                    const vm=vnode.context;\r\n                    const isElSon=el.contains(dom);\r\n                    if(isElSon && !this.showPanel){\r\n                        vm.changePanel(true);\r\n                    }else if(!isElSon && vm.showPanel && !dom.classList.contains('is-other')){\r\n                        vm.changePanel(false);\r\n                    }\r\n                }\r\n            },\r\n        }\r\n    },\r\n    props:{\r\n        date:{\r\n            type:Date,\r\n            default:()=>new Date(),\r\n        }\r\n    },\r\n    data(){\r\n        return {\r\n            showDate:{\r\n                year:0,\r\n                month:0,\r\n                day:0\r\n            },\r\n            chooseDay:{\r\n                month:0,\r\n                day:0\r\n            },\r\n            showPanel:false,\r\n        }\r\n    },\r\n    computed:{\r\n        chooseDate(){\r\n            const {year,month,day} = this.getYearMonthDay(this.date);\r\n            return `${year}-${month+1}-${day}`;\r\n        },\r\n        getOneMonthDays(){\r\n            const {year, month} = this.showDate;\r\n            let firstDay=new Date(year,month,1);\r\n            let startDay=new Date(firstDay - firstDay.getDay()*24*60*60*1000);\r\n            let arr=[];\r\n            for(let i=0;i<42;i++){\r\n                arr.push(new Date(startDay.getTime() + i * 24*60*60*1000));\r\n            }\r\n            return arr;\r\n        },\r\n    },\r\n    methods:{\r\n        getYearMonthDay(date){\r\n            const year = date.getFullYear();\r\n            const month = date.getMonth();\r\n            const day = date.getDate();\r\n            return {\r\n                year,\r\n                month,\r\n                day\r\n            }\r\n        },\r\n        getShowDate(date){\r\n            const {year,month,day} = this.getYearMonthDay(date);\r\n            this.showDate.year=year;\r\n            this.showDate.month=month;\r\n            this.showDate.day=day;\r\n        },\r\n        isCur(day){\r\n            const isCurMonth = day.getMonth()===this.showDate.month;\r\n            const isToday=day.getDate()===new Date().getDate() && day.getMonth()===new Date().getMonth() && day.getFullYear()===new Date().getFullYear();\r\n            return {\r\n                isCurMonth,\r\n                isToday,\r\n            }\r\n        },\r\n        changePanel(flag){\r\n            this.showPanel=flag;\r\n        },\r\n        selectDay(day){\r\n            const {year,month} = this.getYearMonthDay(day);\r\n            // this.chooseDay.month=day.getMonth();\r\n            // this.chooseDay.day=day.getDate();\r\n            this.getShowDate(day);\r\n            this.$emit('change-date',day);\r\n        }, \r\n        changeMonth(type){\r\n            const moveMonth=type==='prev' ? -1 : 1;\r\n            const {year,month,day} = this.showDate;\r\n            let curDate=new Date(year,month,day);\r\n            curDate.setMonth(month + moveMonth);\r\n            this.showDate.year=curDate.getFullYear();\r\n            this.showDate.month=curDate.getMonth();\r\n        },\r\n        changeYear(type){\r\n            const moveYear=type==='prev'? -1 : 1 ;\r\n            this.showDate.year += moveYear;\r\n        },\r\n        inputDate(e){\r\n            clearTimeout(this.timer);\r\n            this.timer=setTimeout(()=>{\r\n                const val=e.target.value;\r\n                const reg=/-/g;\r\n                const isDate=val.match(reg);\r\n                if(isDate.length !== 2)return;\r\n                let [year,month,day] = val.split('-');\r\n                console.log(year,month,day);\r\n                if(year>0 && month>=1 && month<=12 && day>=0 && day<=31){\r\n                    const inputDay=new Date(year,month-1,day);\r\n                    this.getShowDate(inputDay);\r\n                    this.$emit('change-date',inputDay);\r\n            }\r\n            },1000)\r\n            \r\n        },\r\n    },\r\n    created(){\r\n        this.getShowDate(this.date);\r\n    },\r\n\r\n\r\n}\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n    @import './assets/font.css';\r\n    @import './assets/datePicker.css';\r\n</style>"]}]}